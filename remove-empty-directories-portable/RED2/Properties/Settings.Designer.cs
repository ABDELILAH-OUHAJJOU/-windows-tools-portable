//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RED2.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.8.1.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\")]
        public string last_used_directory {
            get {
                return ((string)(this["last_used_directory"]));
            }
            set {
                this["last_used_directory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool dont_scan_hidden_folders {
            get {
                return ((bool)(this["dont_scan_hidden_folders"]));
            }
            set {
                this["dont_scan_hidden_folders"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ignore_0kb_files {
            get {
                return ((bool)(this["ignore_0kb_files"]));
            }
            set {
                this["ignore_0kb_files"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool keep_system_folders {
            get {
                return ((bool)(this["keep_system_folders"]));
            }
            set {
                this["keep_system_folders"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool clipboard_detection {
            get {
                return ((bool)(this["clipboard_detection"]));
            }
            set {
                this["clipboard_detection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("desktop.ini\r\nThumbs.db\r\n.DS_Store\r\n._*")]
        public string ignore_files {
            get {
                return ((string)(this["ignore_files"]));
            }
            set {
                this["ignore_files"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("System Volume Information\r\nRECYCLER\r\nRecycled\r\nNtUninstall\r\n$RECYCLE.BIN\r\nGAC_MSI" +
            "L\r\nGAC_32\r\nwinsxs\r\nSystem32")]
        public string ignore_directories {
            get {
                return ((string)(this["ignore_directories"]));
            }
            set {
                this["ignore_directories"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public decimal max_depth {
            get {
                return ((decimal)(this["max_depth"]));
            }
            set {
                this["max_depth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public decimal infinite_loop_detection_count {
            get {
                return ((decimal)(this["infinite_loop_detection_count"]));
            }
            set {
                this["infinite_loop_detection_count"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public decimal pause_between {
            get {
                return ((decimal)(this["pause_between"]));
            }
            set {
                this["pause_between"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ignore_deletion_errors {
            get {
                return ((bool)(this["ignore_deletion_errors"]));
            }
            set {
                this["ignore_deletion_errors"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int delete_stats {
            get {
                return ((int)(this["delete_stats"]));
            }
            set {
                this["delete_stats"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int delete_mode {
            get {
                return ((int)(this["delete_mode"]));
            }
            set {
                this["delete_mode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool hide_scan_errors {
            get {
                return ((bool)(this["hide_scan_errors"]));
            }
            set {
                this["hide_scan_errors"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public uint min_folder_age_hours {
            get {
                return ((uint)(this["min_folder_age_hours"]));
            }
            set {
                this["min_folder_age_hours"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool fast_search_mode {
            get {
                return ((bool)(this["fast_search_mode"]));
            }
            set {
                this["fast_search_mode"] = value;
            }
        }
    }
}
