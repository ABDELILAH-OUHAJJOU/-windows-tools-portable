<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAA3NJREFUeF7tku1t3DAUBI30mHrcV9pIQQmM7AHOYXy+D1FaUjPA/PBZopb73puI
        iIiIiIiIiIiIiIj08Ovn7z8f5k85E5fhuwQn5Hr4F/NvWRka/GfzmKwIDZzM47ISNOhb5jVZARrwPeZ1
        mRka7CPmGJkRGugz5jiZCRrkK+ZYmQEa4BbmeGmGBrel+Yw0QgMbYT4nTdCgRprPSgM0oD3M5+VIaDB7
        mhhyBDSQI0wc2RMaxJEmluwBDaDBxJORUPEtJqKMgkpvMjFlBFR4k4kpI6DCm0xMGQEV3mRiygio8CYT
        U0ZAhTeZmDICKrzJxJQRUOFNJqaMgApvMjFlBFR4k4kpI6DCm0xMGQEV3mRiygio8CYTU0ZAhTeZmDIC
        KrzJxJQRUOFNJqaMgApvMjFlBFR4k4kpI6DCm0xMGQEV3mRiygio8CYTs49LwPf39x/5aTo+F91oYvZx
        HXTGJbi+Q5uJ2QeF/XCmJaD8TSZmHxT2szMsAeVuMjH7oLBk8xJQ3iYTsw8Ke8vGJaCcTSZmHxT2HpuW
        gPI1mZh9UNhHbFgCytVkYvZBYZ/xyCWgPE0mZh8U9hWPWALK0WRi9kFht3DPJaDvN5mYfVDYLd1jCei7
        TSZmHxR2hCOXgL7XZGL2QWFHOmIJ6DtNJmYfFHYPt1wCOr/JxOyDwu7pFktA5zaZmH1Q2CN8ZQnovCYT
        sw8Ke6TPLAGd02Ri9kFhG3xkCej9JhOzEwrc4j1LQO81mZi9UOgmby0BPd9kYvZD4ZukJaDnmkzMeaBL
        NPl5Cej/TSbmfNBlmvxYAvq9yVQ5L3Qpvc9UOD90Ob1tqlsHuqSyqWw96LL6v6lqXejS+s9UtD50+bOb
        as4DlXBWU8n5oDLOZqo4L1TKWUwFQuWsbq4uF6ikVc2V5RoqazVzVfkKKm0Vc0X5DipvdnM1uRcqcVZz
        JXkUKnM2cxV5Fip1FnMFeRUqt91El62gkltNZNkaKrvNRJVRUOktJqKMhso/2kSTvaAhHGUiyd7QMPY2
        UeQoaCh7mQhyNDSc0ebT0gINaZT5pLRBw9rafEpaoaFtZT4h7dDwXjVHyyzQEJ81R8ps0DAfNUfJrNBQ
        7zVHyOzQcL8zr8oq0JC/Mq/IatCwr82jsio09It5RFbH4ct/S5CfRERERERERERERERE5CZvb38B7qmZ
        VUrZey8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="t1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="t2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>118, 17</value>
  </metadata>
</root>